type Query {
  team: [Team!]!
  service: [Service!]!
  allState: [ServiceState!]!
}

type Mutation {
  setServiceState(teamName: String, serviceName: String!, state: State!): [ServiceState!]
}

type Subscription {
  serviceStateChanged: ServiceState!
}

type Team {
  name: String!
  ip: String!
}

type Service {
  name: String!
  normalPort: Int!
  stealthPort: Int!
}

type ServiceState {
  team: Team!
  service: Service!
  state: State!
}

enum State {
  Ignore
  Normal
  Stealth
}
